openapi: 3.0.0
paths:
  /seafogai/auth/send-code:
    post:
      operationId: AuthController_sendCode
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse'
      summary: 发送登录验证码
      tags:
        - 认证
  /seafogai/auth/login:
    post:
      operationId: AuthController_login
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      summary: 验证码登录
      tags:
        - 认证
  /seafogai/wallet/info:
    get:
      operationId: WalletController_getWalletInfo
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletInfoResponse'
      security:
        - bearer: []
      summary: 获取钱包信息
      tags:
        - 钱包
  /seafogai/wallet/transfer:
    post:
      operationId: WalletController_transfer
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferFundsDto'
      responses:
        '200':
          description: 转账成功
      security:
        - bearer: []
      summary: 发起转账交易
      tags:
        - 钱包
  /seafogai/wallet/transactions:
    get:
      operationId: WalletController_getTransactions
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: token
          required: true
          in: query
          schema:
            type: string
        - name: arg
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 成功获取交易记录
      security:
        - bearer: []
      summary: 获取交易历史记录
      tags:
        - 钱包
  /seafogai/wallet/create-order:
    post:
      operationId: WalletController_createOrder
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentOrderDto'
      responses:
        '200':
          description: 成功创建支付订单
      security:
        - bearer: []
      summary: 创建支付订单，用于购买 Discord 会员资格
      tags:
        - 钱包
  /seafogai/wallet/pay:
    post:
      operationId: WalletController_payOrder
      parameters:
        - name: arg
          in: query
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayOrderDto'
      responses:
        '200':
          description: 支付成功
      security:
        - bearer: []
      summary: 支付订单，用于购买 Discord 会员资格
      tags:
        - 钱包
info:
  title: Seafogai API
  description: Seafogai 工具集
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    SendCodeDto:
      type: object
      properties:
        email:
          type: string
          description: 用户邮箱
          example: user@example.com
      required:
        - email
    SendCodeResponse:
      type: object
      properties:
        code:
          type: number
          description: 状态码
          example: 0
        message:
          type: string
          description: 返回信息
          example: success
      required:
        - code
        - message
    LoginDto:
      type: object
      properties:
        email:
          type: string
          description: 用户邮箱
          example: user@example.com
        code:
          type: string
          description: 验证码
          example: '123456'
      required:
        - email
        - code
    LoginResponseData:
      type: object
      properties:
        user_id:
          type: string
          description: 用户ID
          example: uuid
        email:
          type: string
          description: 用户邮箱
          example: user@example.com
        token:
          type: string
          description: 访问令牌
          example: jwt_token
      required:
        - user_id
        - email
        - token
    LoginResponse:
      type: object
      properties:
        code:
          type: number
          description: 状态码
          example: 0
        message:
          type: string
          description: 返回信息
          example: success
        data:
          description: 返回数据
          allOf:
            - $ref: '#/components/schemas/LoginResponseData'
      required:
        - code
        - message
    Balance:
      type: object
      properties:
        token:
          type: string
          description: 代币符号，例如 "ETH", "USDT"
          example: ETH
        balance:
          type: string
          description: 用户的余额，使用字符串表示以避免浮点数精度问题
          example: '100.00'
        usd_value:
          type: string
          description: 该代币的美元价值，使用字符串表示以避免浮点数精度问题
          example: '300000.00'
      required:
        - token
        - balance
        - usd_value
    WalletInfoData:
      type: object
      properties:
        wallet_address:
          type: string
          description: 用户的钱包地址
          example: '0x1234567890abcdef1234567890abcdef12345678'
        balances:
          description: 用户的余额列表
          type: array
          items:
            $ref: '#/components/schemas/Balance'
      required:
        - wallet_address
        - balances
    WalletInfoResponse:
      type: object
      properties:
        code:
          type: number
          description: 状态码，0表示成功
          example: 0
        message:
          type: string
          description: 返回信息，通常为 "success" 或错误信息
          example: success
        data:
          description: 返回的数据，包含钱包信息
          allOf:
            - $ref: '#/components/schemas/WalletInfoData'
      required:
        - code
        - message
        - data
    TransferFundsDto:
      type: object
      properties:
        to_address:
          type: string
          description: 接收方钱包地址，必须是有效的以太坊地址
          example: '0x1234567890abcdef1234567890abcdef12345678'
        token:
          type: string
          description: 代币类型，例如 "ETH", "USDT"，用于指定转账的代币
          example: ETH
        amount:
          type: string
          description: 转账金额，使用字符串表示以避免浮点数精度问题
          example: '0.1'
        memo:
          type: string
          description: 备注信息，用户可以提供额外信息，例如支付目的
          example: '支付订单 #123'
      required:
        - to_address
        - token
        - amount
    CreatePaymentOrderDto:
      type: object
      properties:
        membership_type:
          type: string
          description: 会员类型，例如 "basic", "premium"
          example: basic
        duration_months:
          type: number
          description: 购买的月份数
          example: 1
      required:
        - membership_type
        - duration_months
    PayOrderDto:
      type: object
      properties:
        currency:
          type: string
          description: 货币类型，例如 "ETH", "USDT"
          example: USDT
        amount:
          type: string
          description: 支付金额
          example: '20.00'
      required:
        - currency
        - amount
